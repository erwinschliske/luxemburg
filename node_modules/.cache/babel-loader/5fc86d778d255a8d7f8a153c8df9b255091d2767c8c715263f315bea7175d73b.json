{"ast":null,"code":"var _jsxFileName = \"/Users/erwin/repos/erwinschliske/luxemburg/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n// Hilfsfunktion, um alle Bilddateien aus /public/images zu laden\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getImageList() {\n  // Die Bilder liegen im public/images Ordner und werden nicht direkt importiert,\n  // sondern als statische Ressourcen geladen\n  // Hier werden die Dateinamen angenommen, z.B. image1.jpg, image2.jpg, ...\n  // Alternativ kann man die Dateinamen dynamisch generieren oder aus einer API laden\n  // Für die Demo nehmen wir Platzhalter\n  return [\"images/image1.jpg\", \"images/image2.jpg\", \"images/image3.jpg\"];\n}\nexport default function App() {\n  _s();\n  const images = getImageList();\n  const [current, setCurrent] = useState(0);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrent(prev => (prev + 1) % images.length);\n    }, 5000);\n    return () => clearInterval(timer);\n  }, [images.length]);\n  if (images.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Keine Bilder gefunden.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginTop: 40\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bilder Slideshow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: images[current],\n      alt: `Bild ${current + 1}`,\n      style: {\n        maxWidth: '80vw',\n        maxHeight: '60vh',\n        borderRadius: 12,\n        boxShadow: '0 4px 16px rgba(0,0,0,0.2)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [\"Bild \", current + 1, \" von \", images.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ce5S7Zpl2S4YgGoPn+G4m52qKq8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","getImageList","App","_s","images","current","setCurrent","timer","setInterval","prev","length","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","alignItems","marginTop","src","alt","maxWidth","maxHeight","borderRadius","boxShadow","_c","$RefreshReg$"],"sources":["/Users/erwin/repos/erwinschliske/luxemburg/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// Hilfsfunktion, um alle Bilddateien aus /public/images zu laden\nfunction getImageList() {\n  // Die Bilder liegen im public/images Ordner und werden nicht direkt importiert,\n  // sondern als statische Ressourcen geladen\n  // Hier werden die Dateinamen angenommen, z.B. image1.jpg, image2.jpg, ...\n  // Alternativ kann man die Dateinamen dynamisch generieren oder aus einer API laden\n  // Für die Demo nehmen wir Platzhalter\n  return [\n    \"images/image1.jpg\",\n    \"images/image2.jpg\",\n    \"images/image3.jpg\"\n  ];\n}\n\nexport default function App() {\n  const images = getImageList();\n  const [current, setCurrent] = useState(0);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrent((prev) => (prev + 1) % images.length);\n    }, 5000);\n    return () => clearInterval(timer);\n  }, [images.length]);\n\n  if (images.length === 0) {\n    return <div>Keine Bilder gefunden.</div>;\n  }\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: 40 }}>\n      <h1>Bilder Slideshow</h1>\n      <img\n        src={images[current]}\n        alt={`Bild ${current + 1}`}\n        style={{ maxWidth: '80vw', maxHeight: '60vh', borderRadius: 12, boxShadow: '0 4px 16px rgba(0,0,0,0.2)' }}\n      />\n      <div style={{ marginTop: 20 }}>\n        Bild {current + 1} von {images.length}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,YAAYA,CAAA,EAAG;EACtB;EACA;EACA;EACA;EACA;EACA,OAAO,CACL,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,CACpB;AACH;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,MAAM,GAAGH,YAAY,CAAC,CAAC;EAC7B,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BF,UAAU,CAAEG,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIL,MAAM,CAACM,MAAM,CAAC;IAClD,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMC,aAAa,CAACJ,KAAK,CAAC;EACnC,CAAC,EAAE,CAACH,MAAM,CAACM,MAAM,CAAC,CAAC;EAEnB,IAAIN,MAAM,CAACM,MAAM,KAAK,CAAC,EAAE;IACvB,oBAAOV,OAAA;MAAAY,QAAA,EAAK;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1C;EAEA,oBACEhB,OAAA;IAAKiB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAG,CAAE;IAAAT,QAAA,gBAC5FZ,OAAA;MAAAY,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBhB,OAAA;MACEsB,GAAG,EAAElB,MAAM,CAACC,OAAO,CAAE;MACrBkB,GAAG,EAAE,QAAQlB,OAAO,GAAG,CAAC,EAAG;MAC3BY,KAAK,EAAE;QAAEO,QAAQ,EAAE,MAAM;QAAEC,SAAS,EAAE,MAAM;QAAEC,YAAY,EAAE,EAAE;QAAEC,SAAS,EAAE;MAA6B;IAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3G,CAAC,eACFhB,OAAA;MAAKiB,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAG,CAAE;MAAAT,QAAA,GAAC,OACxB,EAACP,OAAO,GAAG,CAAC,EAAC,OAAK,EAACD,MAAM,CAACM,MAAM;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACb,EAAA,CA5BuBD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}